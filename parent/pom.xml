<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.msgcloud</groupId>
    <!-- 父模块  当前模块名称(主要配置了一些版本) 被core base config module 模块引用-->
    <artifactId>lems-parent</artifactId>
    <version>1.0</version>
    <name>lems :: Module :: Parent</name>
    <packaging>pom</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.1.RELEASE</version>
    </parent>


    <!-- 主要依赖库的版本定义 -->
    <properties>
        <mybatis-spring-boot>1.3.1</mybatis-spring-boot>
        <alibaba.druid>1.1.0</alibaba.druid>
        <elementspeed.version>1.0.0-RELEASE</elementspeed.version>
        <!-- 		<mybatis.version>3.3.0</mybatis.version> -->
        <!-- 		<tomcat-jdbc.version>7.0.54</tomcat-jdbc.version> -->
        <!-- 		<quartz.version>2.2.1</quartz.version> -->
        <!-- 		<ehcache.version>2.6.9</ehcache.version> -->
        <guava.version>17.0</guava.version>
        <!-- 		<commons-lang3.version>3.3.2</commons-lang3.version> -->
        <commons-io.version>2.4</commons-io.version>
        <commons-fileupload.version>1.2.2</commons-fileupload.version>
        <!-- 		<aspectj.version>1.7.4</aspectj.version> -->
        <!-- 		<junit.version>4.11</junit.version> -->
        <!-- 		<assertj.version>1.6.1</assertj.version> -->
        <!-- 		<mockito.version>1.9.5</mockito.version> -->
        <!-- 		<powermock.version>1.5.5</powermock.version> -->
        <!-- 		<h2.version>1.3.176</h2.version> -->
        <oracle.version>11.2.0.3</oracle.version>
        <!-- 		<mssqlserver.version>4.0</mssqlserver.version>		   -->
        <poi.version>4.1.1</poi.version>
        <!--<poi.version>3.10.1</poi.version>-->
        <itext.pdf>5.5.1</itext.pdf>
        <itext.asian>5.2.0</itext.asian>
        <dozer.version>5.5.1</dozer.version>
        <!-- 		<cxf.version>3.0.10</cxf.version> -->
        <qrcode>2.1</qrcode>
        <httpclient.version>4.5</httpclient.version>
        <httpcore.version>4.4.1</httpcore.version>
        <dockerfile.version>1.4.0</dockerfile.version>
        <configUri.dockerfile>http://localhost:8888</configUri.dockerfile>
        <configUri.test>http://10.213.4.54:8888</configUri.test>
        <configUri.prod>http://10.3.5.68:8888</configUri.prod>
        <configLog.path>/home/admin/logs/@project.build.finalName@</configLog.path>
        <configServer.port>8080</configServer.port>
    </properties>
    <prerequisites>
        <maven>3.0.0</maven>
    </prerequisites>




    <!-- 设定除中央仓库 (repo1.maven.org/maven2/)外的其他仓库,按设定顺序进行查询，如有Nexus私服, 取消注释并指向正确的服务器地址 -->
    <repositories>
        <repository>
            <id>aliyun-rep</id>
            <name>aliyun nexus</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/libs-milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>mvnrepository</id>
            <url>http://mvnrepository.com/</url>
            <!-- 告诉Maven可以从这个仓库下载releases（稳定版本）版本的构件 -->
            <releases>
                <enabled>true</enabled>
            </releases>
            <!-- 告诉Maven不要从这个仓库下载snapshot（非稳定版本）版本的构件 -->
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <!-- 如有Nexus私服, 取消注释并指向正确的服务器地址-->
    <!--    <pluginRepositories>-->
    <!--        <pluginRepository>-->
    <!--            <id>elem-rep</id>-->
    <!--            <name>company nexus</name>-->
    <!--            <url>http://119.3.25.215:8081/nexus/content/groups/public</url>-->
    <!--            <snapshots>-->
    <!--                <enabled>false</enabled>-->
    <!--            </snapshots>-->
    <!--        </pluginRepository>-->
    <!--    </pluginRepositories>-->

    <!-- 发布到远程仓库 -->
    <!--    <distributionManagement>-->
    <!--        <repository>-->
    <!--            <id>releases</id>-->
    <!--            <name>releases</name>-->
    <!--            <url>-->
    <!--                http://pmp.yst.com.cn:8081/nexus/content/repositories/releases/-->
    <!--            </url>-->
    <!--        </repository>-->
    <!--        <snapshotRepository>-->
    <!--            <id>snapshots</id>-->
    <!--            <name>snapshots</name>-->
    <!--            <url>-->
    <!--                http://pmp.yst.com.cn:8081/nexus/content/repositories/snapshots/-->
    <!--            </url>-->
    <!--            <uniqueVersion>true</uniqueVersion>-->
    <!--        </snapshotRepository>-->
    <!--    </distributionManagement>-->


    <!-- 预定义依赖项的version,scope与exclusions,子项目中只需定义groupId 与  artifactId 即可 -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Finchley.M9</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- mybatis -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>4.1.3</version>
            </dependency>
            <dependency>
                <groupId>com.github.jsqlparser</groupId>
                <artifactId>jsqlparser</artifactId>
                <version>0.9.4</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${alibaba.druid}</version>
            </dependency>
            <!-- j2ee web spec -->
            <!-- update to servlet 3.0 for spring 4.0 MockHttpServletRequest
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.0.1</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jsp-api</artifactId>
                <version>2.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>javax.servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>-->
            <!-- WEB end -->
            <!-- XML begin -->
            <dependency>
                <groupId>dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>1.6.1</version>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- LOGGING begin -->
            <!-- slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- 代码直接调用log4j会被桥接到slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- 代码直接调用commons-logging会被桥接到slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- 代码直接调用java.util.logging会被桥接到slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- GENERAL UTILS begin -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.9</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.9.2</version>
                <exclusions>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Document util -->
            <dependency>
                <groupId>jdom</groupId>
                <artifactId>jdom</artifactId>
                <version>1.0</version>
            </dependency>
            <!-- Dwr -->
            <dependency>
                <groupId>org.directwebremoting</groupId>
                <artifactId>dwr</artifactId>
                <version>3.0.0-RELEASE</version>
            </dependency>
            <!-- commons-pool -->
            <!-- email -->
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
                <version>1.4.7</version>
            </dependency>
            <!-- pojo copy -->
            <dependency>
                <groupId>net.sf.dozer</groupId>
                <artifactId>dozer</artifactId>
                <version>${dozer.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>net.sf.dozer</groupId>
                <artifactId>dozer-spring</artifactId>
                <version>${dozer.version}</version>
            </dependency>
            <!-- OTHER TOOLS end -->
            <!-- TEST begin -->
            <!-- junit -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- assertj -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- oracle -->
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${oracle.version}</version>
            </dependency>
            <!-- ms sqlserver -->
            <!-- 			<dependency> -->
            <!-- 			  	<groupId>com.microsoft.sqlserver</groupId> -->
            <!--   				<artifactId>sqljdbc4</artifactId> -->
            <!-- 			  	<version>${mssqlserver.version}</version> -->
            <!-- 			</dependency> -->
            <dependency>
                <groupId>com.hynnet</groupId>
                <artifactId>sqljdbc4-chs</artifactId>
                <version>4.0.2206.100</version>
            </dependency>
            <!-- poi -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <!-- google java library -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!-- 导出pdf, word, xml -->
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itextpdf</artifactId>
                <version>${itext.pdf}</version>
            </dependency>
            <dependency>
                <groupId>com.itextpdf</groupId>
                <artifactId>itext-asian</artifactId>
                <version>${itext.asian}</version>
            </dependency>
            <!--<dependency>-->
                <!--<groupId>QRCode</groupId>-->
                <!--<artifactId>QRCode</artifactId>-->
                <!--<version>${qrcode}</version>-->
            <!--</dependency>-->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>2.9.0</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>2.9.3</version>
            </dependency>
            <!--农夫山泉公共帮助类-->
            <!--<dependency>-->
            <!--<groupId>com.nfsq</groupId>-->
            <!--<artifactId>nf-supply-chain-utils</artifactId>-->
            <!--<version>1.0.1-RELEASE</version>-->
            <!--</dependency>-->
        </dependencies>
    </dependencyManagement>
    <!-- 插件配置 -->
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- compiler插件, 设定JDK版本 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <showWarnings>true</showWarnings>
                    </configuration>
                </plugin>
                <!-- resource插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <!-- test插件, 仅测试名称为*Test的类, 使用支持分组测试的surefire-junit47 driver -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.16</version>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-junit47</artifactId>
                            <version>2.16</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- 增加更多的Source和Test Source目录插件 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
                <!-- cobertura 测试覆盖率统计插插件 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>cobertura-maven-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <!-- war打包插件, 设定war包名称不带版本号 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <warName>${project.artifactId}</warName>
                    </configuration>
                </plugin>
                <!-- jar打包相关插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>2.2.1</version>
                </plugin>
                <!-- clean插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.5</version>
                </plugin>
                <!-- install插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.1</version>
                </plugin>
                <!-- enforcer插件, 避免被依赖的依赖引入过期的jar包
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.3.1</version>
                    <executions>
                        <execution>
                            <id>enforce-banned-dependencies</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>3.0.3</version>
                                    </requireMavenVersion>
                                    <requireJavaVersion>
                                        <version>1.6</version>
                                    </requireJavaVersion>
                                    <bannedDependencies>
                                        <searchTransitive>true</searchTransitive>
                                        <excludes>
                                            <exclude>commons-logging</exclude>
                                            <exclude>aspectj:aspectj*</exclude>
                                            <exclude>org.springframework</exclude>
                                        </excludes>
                                        <includes>
                                            <include>org.springframework:*:4.0.*</include>
                                        </includes>
                                    </bannedDependencies>
                                </rules>
                                <fail>true</fail>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>-->
                <!-- tomcat插件  -->
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>2.2</version>
                </plugin>
                <!-- assembly插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.4</version>
                </plugin>
                <!-- dependency相关插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.8</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.1</version>
                </plugin>
                <!-- ant插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>
                <!-- exec java 插件 -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>1.2.1</version>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile.version}</version>
                    <executions>
                        <execution>
                            <id>default</id>
                            <goals>
                                <goal>build</goal>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <repository>${project.artifactId}</repository>
                        <buildArgs>
                            <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
                        </buildArgs>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- source attach plugin -->
            <!-- <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin> -->
        </plugins>
    </build>

</project>